{"version":3,"sources":["./src/app/customer/customer.page.html","./src/app/customer/customer.module.ts","./src/app/customer/customer.page.scss","./src/app/customer/customer.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6qDAA6qD,eAAe,6CAA6C,YAAY,sG;;;;;;;;;;;;;;;;;;;;;;ACA5sD;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,+DAA+D,2I;;;;;;;;;;;;;;;;;;ACAb;AACS;AAG3D,IAAM,MAAM,GAAG;IACb,IAAI,EAAE,SAAS;IACf,QAAQ,EAAE,SAAS;CACpB,CAAC;AAOF;IAKE;IACE,0BAA0B;IAClB,QAAkB,EAClB,SAA0B;QAD1B,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAiB;IAChC,CAAC;IAEL,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,qCAAqC;QACrC,mBAAmB;QACnB,4DAA4D;QAC5D,6HAA6H;QAC7H,iDAAiD;QACjD,qCAAqC;QACrC,mCAAmC;QACnC,MAAM;QAEN,mBAAmB;IACrB,CAAC;IAED,6CAA6C;IAC7C,uCAAuC;IACvC,eAAe;IACf,4DAA4D;IAC5D,gEAAgE;IAChE,0BAA0B;IAC1B,+BAA+B;IAC/B,iCAAiC;IACjC,sBAAsB;IACtB,gCAAgC;IAChC,sCAAsC;IACtC,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,qCAAqC;IACrC,QAAQ;IACR,IAAI;IAEJ,mBAAmB;IACnB,4DAA4D;IAC5D,uGAAuG;IACvG,gCAAgC;IAChC,sDAAsD;IACtD,uCAAuC;IACvC,2BAA2B;IAC3B,cAAc;IACd,2BAA2B;IAC3B,2BAA2B;IAC3B,iCAAiC;IACjC,WAAW;IACX,qCAAqC;IACrC,OAAO;IACP,gBAAgB;IAChB,IAAI;IAEJ,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;;gBAvDmB,uDAAQ;gBACP,8DAAe;;IARzB,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gJAAmC;;SAEpC,CAAC;+EAQoB,uDAAQ;YACP,8DAAe;OARzB,YAAY,CA+DxB;IAAD,mBAAC;CAAA;AA/DwB","file":"customer-customer-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Customer\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"openForm()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" slot=\\\"end\\\" name=\\\"person-add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <!-- novalidate is used with \\\"ngForm\\\", myForm is an id -->\\n  <form novalidate #myForm=\\\"ngForm\\\">\\n    <ion-list>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">FullName</ion-label>\\n        <ion-input ngModel type=\\\"text\\\" name=\\\"fullname\\\" #fullname=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"fullname.invalid && (phone.dirty || phone.touched)\\\">\\n        please input fullname\\n      </ion-text>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Phone</ion-label>\\n        <ion-input ngModel type=\\\"text\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" required></ion-input>\\n      </ion-item>\\n      <ion-text color=\\\"danger\\\" *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\">\\n        please input phone number\\n      </ion-text>\\n\\n      <ion-button (click)=\\\"add(myForm.value)\\\" class=\\\"ion-margin-top\\\" [disabled]=\\\"myForm.invalid\\\" size=\\\"large\\\"\\n        expand=\\\"full\\\">\\n        Save Data\\n      </ion-button>\\n\\n    </ion-list>\\n  </form>\\n\\n  <ion-list *ngIf=\\\"customers\\\">\\n    <ion-item-sliding *ngFor=\\\"let item of customers\\\">\\n      <ion-item>\\n        <ion-label>\\n          <ion-text color=\\\"primary\\\">\\n            <h1>{{item.fullname}}</h1>\\n          </ion-text>\\n          <p>{{item.phone}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerPage } from './customer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerPage]\n})\nexport class CustomerPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Platform, ToastController } from '@ionic/angular';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\n\nconst dataDB = {\n  name: 'data.db',\n  location: 'default'\n};\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.page.html',\n  styleUrls: ['./customer.page.scss'],\n})\nexport class CustomerPage implements OnInit {\n\n  isToggle: boolean;\n  customers: any[];\n\n  constructor(\n    // private sqlite: SQLite,\n    private platform: Platform,\n    private toastCtrl: ToastController,\n  ) { }\n\n  ngOnInit() {\n    this.isToggle = false;\n    // this.platform.ready().then(() => {\n    //   // create a db\n    //   this.sqlite.create(dataDB).then((db: SQLiteObject) => {\n    //     db.executeSql('CREATE TABLE IF NOT EXISTS Customers(id INTEGER PRIMARY KEY AUTOINCREMENT, fullname TEXT, phone TEXT)')\n    //       .then(() => console.log('Executed SQL'))\n    //       .catch(e => console.log(e));\n    //   }).catch(e => console.log(e));\n    // });\n\n    // this.showData();\n  }\n\n  // show data from Customers table, sort by id\n  // and store the data in this.customers\n  // showData() {\n  //   this.sqlite.create(dataDB).then((db: SQLiteObject) => {\n  //     db.executeSql('SELECT * FROM Customers ORDER BY id DESC')\n  //       .then((data) => {\n  //         this.customers = [];\n  //         const { rows } = data;\n  //         if (rows) {\n  //           rows.forEach(d => {\n  //             this.customers.push(d);\n  //           });\n  //         }\n  //       })\n  //       .catch(e => console.log(e));\n  //   });\n  // }\n\n  // add(form: any) {\n  //   this.sqlite.create(dataDB).then((db: SQLiteObject) => {\n  //     db.executeSql('INSERT INTO Customers(fullname, phone) VALUES(?,?)', [form.fullname, form.phone])\n  //       .then(async (data) => {\n  //         const toast = await this.toastCtrl.create({\n  //           message: 'Data inserted.',\n  //           duration: 3000\n  //         });\n  //         toast.present();\n  //         this.showData();\n  //         this.isToggle = false;\n  //       })\n  //       .catch(e => console.log(e));\n  //   })\n  //     .catch();\n  // }\n\n  openForm() {\n    this.isToggle = !this.isToggle;\n  }\n}\n"],"sourceRoot":""}